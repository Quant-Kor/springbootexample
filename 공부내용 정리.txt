과거에는 메이븐 -> 요즘 그래들로 많이 넘어오는 추세라고함

start.spring.io 사이트-------------------------
그룹에 보통 기업 도메인


메이븐이나 그래들 모두 보면 main과 test로 나누어져있는데 이는 이제 거의 표준화됨


테스트 -> 테스트 코드
메인 -> 자바코드, 설정파일 등등... 

빌드.gradle 중요!!

그래들 -> 버전 설정하고 라이브러리 땡겨오는 것만이라고 우선 이해!


그래들이나 메이븐과 같은 툴들은 의존관계를 관리를 해줌


현업에선 println 거의 X 
로그로 관리하며 로그로 치명적인 오류들을 따로 모아 볼 수있음
로깅에대해서 잘 알아야함!


----------------------------------------
HelloController.java안에 있는 model.addAttribute() 여기에서 value로 들어간 값을 
hello.html에 {data} 로 표시한 곳의 값으로 들어가게 만들어줌

컨트롤러에서 리턴으로 hello값을 주게되면 템플릿 폴더로 들어가 hello.html파일을 찾게됨


--------------------------------------------------
빌드하고 실행하는 방법으로 윈도우 기준으로
./gradlew.bat build를 하고
cd build/libs에서
java -jar hello-spring-0.0.1-SNAPSHOT.jar  실행!

다시 정리할때는
./gradlew.bat clean을 하면 build 폴더가 없어짐



---------------------------------------------------------
스프링 웹 MVC 
-정적 컨텐츠
-MVC(Model, View, Controller)
-API

정적 컨텐츠는 말그대로 html파일을 그냥 보여주는 것
MVC는 저 3가지를 이용해서 데이터를 보내줌 
ex)@RequestParam을 이용해 변수를 화면에 띄울 수 있게 함
?name = spring

API는(객체반환)
@ResponseBody를 이용해 http의 헤더부와 바디부에서 이 데이터를 직접 넣어주는 방식으로 작동함
html태그같은 것들이 존재하지 않고 페이지 소스보기를 눌렀을 시 그냥 데이터 파일만 보임

json방식으로 반환할때 자주 api를 씀

getter and setter -> java bean 규약 
private 변수는 바로 안에서 못꺼내기 때문에 get 과 set방식을 통해 변수를 사용할 수 있게 꺼냄(프로퍼티 접근 방식)

객체가 반환되면 json방식으로 반환함(spring responsebody를 통해서 -> httpmessage Converter)


----------------------------
테스트가 끝나고 난후 그 데이터를 클리어 해주는 코드가 필요!






--------------------------
컨트롤러를 통해 외부요청을 받고
서비스에서 비즈니스 로직을 만들고
리포지토리에서 데이터를 저장함.


스프링에 올라가는 것들만 Autowired 작동!

